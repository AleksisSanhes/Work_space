from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains
from selenium.common.exceptions import TimeoutException, NoSuchElementException
from bs4 import BeautifulSoup
import time
import random
import json
from datetime import datetime, timedelta
import re
import os
from webdriver_manager.chrome import ChromeDriverManager


def setup_driver():
    chrome_options = Options()
    chrome_options.add_argument("--disable-blink-features=AutomationControlled")
    chrome_options.add_argument("--start-maximized")
    chrome_options.add_argument("--disable-infobars")
    chrome_options.add_argument("--disable-extensions")
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    chrome_options.add_argument("--disable-gpu")
    chrome_options.add_argument("--disable-web-security")
    chrome_options.add_argument("--allow-running-insecure-content")
    chrome_options.add_argument("--ignore-certificate-errors")
    chrome_options.add_argument("--disable-popup-blocking")
    chrome_options.add_argument("--disable-notifications")
    chrome_options.add_argument("--disable-logging")
    chrome_options.add_argument("--log-level=3")
    chrome_options.add_argument("--window-size=1920,1080")
    chrome_options.add_argument(
        f"user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{random.randint(100, 125)}.0.0.0 Safari/537.36")

    # –î–ª—è —Ä–∞–±–æ—Ç—ã –≤ headless —Ä–µ–∂–∏–º–µ (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞)
    # chrome_options.add_argument("--headless=new")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π
    service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=service, options=chrome_options)

    # –°–∫—Ä—ã—Ç–∏–µ WebDriver –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
    driver.execute_script("Object.defineProperty(navigator, 'webdriver', {get: () => undefined})")

    return driver


def human_like_interaction(driver):
    """–ò–º–∏—Ç–∞—Ü–∏—è —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è"""
    try:
        # –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        scroll_height = driver.execute_script("return document.body.scrollHeight")
        for i in range(0, scroll_height, random.randint(100, 300)):
            driver.execute_script(f"window.scrollTo(0, {i});")
            time.sleep(random.uniform(0.1, 0.3))

        # –°–ª—É—á–∞–π–Ω—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∏
        actions = ActionChains(driver)
        for _ in range(random.randint(2, 5)):
            x_offset = random.randint(-100, 100)
            y_offset = random.randint(-100, 100)
            actions.move_by_offset(x_offset, y_offset).perform()
            time.sleep(random.uniform(0.2, 0.5))

        # –ö–ª–∏–∫ –≤ —Å–ª—É—á–∞–π–Ω–æ–µ –º–µ—Å—Ç–æ
        if random.random() > 0.7:
            element = driver.find_element(By.TAG_NAME, 'body')
            actions.move_to_element_with_offset(element, random.randint(10, 100),
                                                random.randint(10, 100)).click().perform()
            time.sleep(random.uniform(0.5, 1.5))
    except:
        pass


def parse_kommersant():
    driver = setup_driver()
    news_items = []
    three_weeks_ago = datetime.now() - timedelta(days=21)

    try:
        # –û—Å–Ω–æ–≤–Ω–æ–π URL —Ä–∞–∑–¥–µ–ª–∞ "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞"
        base_url = "https://www.kommersant.ru/rubric/3"
        print(f"üõú –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É: {base_url}")
        driver.get(base_url)

        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        WebDriverWait(driver, 15).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, "article.rubric_lenta__item"))
        )

        # –ò–º–∏—Ç–∞—Ü–∏—è —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è
        human_like_interaction(driver)

        # –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        last_height = driver.execute_script("return document.body.scrollHeight")
        scroll_attempts = 0

        while scroll_attempts < 3:
            driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
            time.sleep(random.uniform(1.5, 3.0))
            new_height = driver.execute_script("return document.body.scrollHeight")

            if new_height == last_height:
                scroll_attempts += 1
            else:
                scroll_attempts = 0
                last_height = new_height

            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–º–∏—Ç–∞—Ü–∏—è –ø–æ–≤–µ–¥–µ–Ω–∏—è
            if random.random() > 0.5:
                human_like_interaction(driver)

        # –ü–∞—Ä—Å–∏–Ω–≥ —Å–ø–∏—Å–∫–∞ —Å—Ç–∞—Ç–µ–π
        soup = BeautifulSoup(driver.page_source, 'html.parser')
        articles = soup.select('article.rubric_lenta__item')
        print(f"üîç –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {len(articles)}")

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–π —Å—Ç–∞—Ç—å–∏
        for article in articles:
            try:
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å—Å—ã–ª–∫—É
                title_tag = article.select_one('a.rubric_lenta__item_link')
                if not title_tag:
                    continue

                title = title_tag.text.strip()
                link = "https://www.kommersant.ru" + title_tag['href']

                # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞—Ç—É
                date_tag = article.select_one('time.uho__time')
                if not date_tag:
                    continue

                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—É –≤ –æ–±—ä–µ–∫—Ç datetime
                date_str = date_tag.text.strip().lower()
                if '—Å–µ–≥–æ–¥–Ω—è' in date_str:
                    pub_date = datetime.now()
                elif '–≤—á–µ—Ä–∞' in date_str:
                    pub_date = datetime.now() - timedelta(days=1)
                else:
                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ "10 –∏—é–ª—è"
                    match = re.search(r'(\d{1,2})\s+([–∞-—è]+)', date_str)
                    if match:
                        day = int(match.group(1))
                        month_str = match.group(2)[:3]
                        months = {
                            '—è–Ω–≤': 1, '—Ñ–µ–≤': 2, '–º–∞—Ä': 3, '–∞–ø—Ä': 4,
                            '–º–∞—è': 5, '–∏—é–Ω': 6, '–∏—é–ª': 7, '–∞–≤–≥': 8,
                            '—Å–µ–Ω': 9, '–æ–∫—Ç': 10, '–Ω–æ—è': 11, '–¥–µ–∫': 12
                        }
                        if month_str in months:
                            pub_date = datetime(datetime.now().year, months[month_str], day)
                        else:
                            pub_date = datetime.now()
                    else:
                        pub_date = datetime.now()

                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ä—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
                if pub_date < three_weeks_ago:
                    continue

                # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
                delay = random.uniform(2.0, 5.0)
                print(f"‚è≥ –ó–∞–¥–µ—Ä–∂–∫–∞ {delay:.1f} —Å–µ–∫ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –Ω–∞ —Å—Ç–∞—Ç—å—é")
                time.sleep(delay)

                # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å—Ç–∞—Ç—å–∏
                print(f"üìÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç–∞—Ç—å—é: {title}")
                driver.get(link)

                # –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                WebDriverWait(driver, 15).until(
                    EC.presence_of_element_located((By.CSS_SELECTOR, "div.article_text_wrapper"))
                )

                # –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–≤–µ–¥–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å—Ç–∞—Ç—å–∏
                human_like_interaction(driver)

                # –ü–∞—Ä—Å–∏–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏
                article_soup = BeautifulSoup(driver.page_source, 'html.parser')

                # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç
                content_div = article_soup.find('div', class_='article_text_wrapper')
                if not content_div:
                    print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç–∞—Ç—å–∏")
                    driver.back()
                    time.sleep(1)
                    continue

                # –£–¥–∞–ª—è–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
                for elem in content_div.select(
                        '.article_incut, .article_incut__link, .doc__announce, .article__subscribe, .doc__tags, .article__tools'):
                    elem.decompose()

                full_text = content_div.get_text(separator='\n', strip=True)

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ —Ç–µ–∫—Å—Ç–µ
                KEYWORDS = ["—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫", "–≤–∏—ç", "–≤–æ–¥–æ—Ä–æ–¥", "–∞–∫–±", "—ç–∫–æ–ª–æ–≥–∏", "–¥–µ–∫–∞—Ä–±–æ–Ω–∏–∑–∞—Ü",
                            "–∑–µ–ª–µ–Ω", "–≤–æ–∑–æ–±–Ω–æ–≤", "—ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª", "—ç–∫–æ—Ç–µ—Ö", "–∫–ª–∏–º–∞—Ç", "—ç–Ω–µ—Ä–≥–æ–ø–µ—Ä–µ—Ö–æ–¥",
                            "renewable", "solar", "wind", "battery", "hydrogen", "decarbonization"]

                content_lower = (title + " " + full_text).lower()
                if any(kw in content_lower for kw in KEYWORDS):
                    news_items.append({
                        "title": title,
                        "url": link,
                        "source": "Kommersant",
                        "date": pub_date.strftime("%Y-%m-%d"),
                        "preview": full_text[:200] + "..." if len(full_text) > 200 else full_text,
                        "full_text": full_text
                    })
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ø–æ–¥—Ö–æ–¥—è—â–∞—è —Å—Ç–∞—Ç—å—è: {title}")
                else:
                    print(f"‚è≠Ô∏è –°—Ç–∞—Ç—å—è –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–º–∞—Ç–∏–∫–µ: {title}")

                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É —Å—Ç–∞—Ç–µ–π
                driver.back()
                WebDriverWait(driver, 10).until(
                    EC.presence_of_element_located((By.CSS_SELECTOR, "article.rubric_lenta__item"))
                )
                time.sleep(random.uniform(1.0, 2.5))

            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç–∞—Ç—å–∏: {str(e)}")
                # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                driver.get(base_url)
                WebDriverWait(driver, 15).until(
                    EC.presence_of_element_located((By.CSS_SELECTOR, "article.rubric_lenta__item"))
                )
                continue

        return news_items

    except Exception as e:
        print(f"üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –ö–æ–º–º–µ—Ä—Å–∞–Ω—Ç–∞: {str(e)}")
        return []
    finally:
        # –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä
        driver.quit()
        print("üîö –î—Ä–∞–π–≤–µ—Ä –±—Ä–∞—É–∑–µ—Ä–∞ –∑–∞–∫—Ä—ã—Ç")


# –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞
print("=" * 50)
print("üü¢ –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –ö–æ–º–º–µ—Ä—Å–∞–Ω—Ç–∞")
print("=" * 50)
start_time = time.time()
kommersant_news = parse_kommersant()
execution_time = time.time() - start_time

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
if kommersant_news:
    filename = f'kommersant_news_{datetime.now().strftime("%Y%m%d_%H%M")}.json'
    with open(filename, 'w', encoding='utf-8') as f:
        json.dump(kommersant_news, f, indent=2, ensure_ascii=False)
    print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {len(kommersant_news)} –≤ —Ñ–∞–π–ª {filename}")
else:
    print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å—Ç–∞—Ç–µ–π")

print(f"‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {execution_time:.1f} —Å–µ–∫—É–Ω–¥")
print("=" * 50)