# bot/bot_runner.py
import asyncio
import logging
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes
from bot.db import NewsDB
from bot.telegram_bot import send_to_moderation, make_news_id, PUBLISH_CHANNEL
from bot.telegram_handlers import button_handler, edit_text_handler, skip_edit_handler
from bot.cli import load_and_send_news
from telegram.constants import ChatType


logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

TOKEN = "8217915867:AAFLPnQmnxhHmjloF4Ct3HhR9jjRjVYV6C8"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã
db = NewsDB()


# --- –ö–æ–º–∞–Ω–¥—ã ---
async def start(update, context):
    await update.message.reply_text("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")

# –î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤ bot_runner.py
async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏, –≤—ã–∑–≤–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏."""
    logger.error("Exception while handling an update:", exc_info=context.error)

async def test_publish_command(update, context):
    try:
        await context.bot.send_message(chat_id=PUBLISH_CHANNEL, text="üîî –¢–µ—Å—Ç–æ–≤–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è")
        await update.message.reply_text("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (–µ—Å–ª–∏ –±–æ—Ç –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É).")
    except Exception as e:
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")


# --- Post init ---
async def post_init(app):
    try:
        await app.bot.delete_webhook(drop_pending_updates=True)
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å webhook: {e}")

    # –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Ç–∞—Å–∫–µ
    asyncio.create_task(load_and_send_news(db, app.bot))


# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
def run_bot():
    application = Application.builder().token(TOKEN).post_init(post_init).build()

    # --- –•—ç–Ω–¥–ª–µ—Ä—ã ---
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("testpublish", test_publish_command))
    application.add_handler(CallbackQueryHandler(
        lambda u, c: button_handler(u, c, db),
        pattern=r"^(approve|reject|edit)\|"
    ))
    application.add_handler(CommandHandler("skip", skip_edit_handler))
    # –î–æ–±–∞–≤—å—Ç–µ —Ñ–∏–ª—å—Ç—Ä –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º
    application.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND & filters.ChatType.PRIVATE,
        lambda u, c: edit_text_handler(u, c, db)
    ))
    application.add_handler(CommandHandler("skip", skip_edit_handler, filters=filters.ChatType.PRIVATE))

    # –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)

    # --- –ó–∞–ø—É—Å–∫ ---
    application.run_polling()

if __name__ == "__main__":
    run_bot()
